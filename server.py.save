import web
import json
from mimerender import mimerender

render_xml = lambda message: '<message>%s</message>'%message
render_json = lambda **args: json.dumps(args)
render_html = lambda message: '<html><body>%s</body></html>'%message
render_txt = lambda message: message

urls = (
    '/rest/device', 'device'
)
app = web.application(urls, globals())

# device representation, this simply facade to device.py api
class device:
	@mimerender(
		default = 'html',
		html = render_html,
		xml  = render_xml,
		json = render_json,
		txt  = render_txt
	)
	def GET(self, addr): # gets the status of device: currently in bootloader/running state
		return {'status': str(device_probe(addr))}
	def POST(self):
		firmware = web.input(firmware={})
		addr = web.input(addr={})
		device_firmware_erase(addr, 0x8200*2)
		return {'status': device_firmware_upload(addr, firmware['firmware'].file, 0x8200*2)}
	def PUT(self):
		launch_addr = web.input(launch={})
		discover_addr = web.input(discover={})
		if launch_addr:
			return {'status': device_launch(launch_addr)}
		if discover_addr:
			return {'status': device_launch(discover_addr)}


if __name__ == "__main__":
	app.run()
